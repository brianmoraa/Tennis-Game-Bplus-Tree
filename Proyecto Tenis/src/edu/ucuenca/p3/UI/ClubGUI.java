/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ucuenca.p3.UI;

import edu.ucuenca.p3.DAO.exceptions.ClubExistenteExcepcion;
import edu.ucuenca.p3.DAO.exceptions.ClubNoExisteExcepcion;
import edu.ucuenca.p3.Modulos.Club;
import edu.ucuenca.p3.SRV.ClubSRV;
import edu.ucuenca.p3.SRV.exceptions.CedulaValidacionException;
import edu.ucuenca.p3.SRV.exceptions.ClubDatosError;
import edu.ucuenca.p3.SRV.exceptions.ClubDatosVaciosException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author andre
 */
public class ClubGUI extends javax.swing.JPanel {

    DefaultTableModel modeloTabla;

    public ClubGUI() {
        initComponents();
        tabla_Clubs();
        bloquearCampos();
        txtCodigo.requestFocus();

        ClubSRV clubsrv = new ClubSRV();
        clubsrv.cargarDatosArchivo();
        clear_Table(jTable1);
        tabla_Clubs_Archivos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPropietario = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_tabla_Clubes = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        cbxEnOrden = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cbxOrdenarPor = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setMaximumSize(new java.awt.Dimension(770, 533));
        setMinimumSize(new java.awt.Dimension(770, 533));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestionar Club");
        add(jLabel1);
        jLabel1.setBounds(700, 30, 200, 33);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Código:");
        add(jLabel2);
        jLabel2.setBounds(490, 100, 106, 15);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nombre: ");
        add(jLabel3);
        jLabel3.setBounds(490, 140, 106, 25);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Propietario:");
        add(jLabel4);
        jLabel4.setBounds(820, 100, 92, 29);
        add(txtCodigo);
        txtCodigo.setBounds(590, 99, 150, 30);
        add(txtNombre);
        txtNombre.setBounds(590, 140, 150, 33);

        txtPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPropietarioActionPerformed(evt);
            }
        });
        add(txtPropietario);
        txtPropietario.setBounds(917, 100, 160, 29);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        add(btnCrear);
        btnCrear.setBounds(480, 190, 106, 30);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        add(btnModificar);
        btnModificar.setBounds(640, 190, 102, 30);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar);
        btnEliminar.setBounds(810, 190, 103, 30);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        add(btnLimpiar);
        btnLimpiar.setBounds(970, 190, 110, 30);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Clubes"));

        jTable_tabla_Clubes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Propietario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_tabla_Clubes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable_tabla_ClubesMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_tabla_Clubes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
        );

        add(jPanel1);
        jPanel1.setBounds(490, 300, 592, 260);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setText("EN ORDEN:");
        add(jLabel12);
        jLabel12.setBounds(820, 250, 70, 29);

        cbxEnOrden.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ascendente", "Descendente" }));
        cbxEnOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEnOrdenActionPerformed(evt);
            }
        });
        add(cbxEnOrden);
        cbxEnOrden.setBounds(890, 250, 162, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setText("ORDENAR POR:");
        add(jLabel11);
        jLabel11.setBounds(520, 250, 121, 30);

        cbxOrdenarPor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Propietario" }));
        cbxOrdenarPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOrdenarPorActionPerformed(evt);
            }
        });
        add(cbxOrdenarPor);
        cbxOrdenarPor.setBounds(630, 250, 120, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ucuenca/p3/Iconos/fondo5.jpg"))); // NOI18N
        add(jLabel5);
        jLabel5.setBounds(0, 0, 1190, 660);
    }// </editor-fold>//GEN-END:initComponents

    public void limpiarCampos() {
        txtCodigo.setEnabled(true);
        txtCodigo.setText("");
        txtNombre.setText("");
        txtPropietario.setText("");

        btnCrear.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        try {
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String propietario = txtPropietario.getText();

            ClubSRV clubsrv = new ClubSRV();
            if (clubsrv.existeClub(codigo) == false) {
                clubsrv.ingresarClub(codigo, nombre, propietario);

                clear_Table(jTable_tabla_Clubes);
                //tabla_Clubs();
                tabla_Clubs_Archivos();

                JOptionPane.showMessageDialog(null, "Club creado exitosamente.");

                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "El club con codigo " + codigo + " ya existe.");
            }
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (ClubExistenteExcepcion ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (ClubDatosVaciosException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (ClubDatosError ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String propietario = txtPropietario.getText();
            
            ClubSRV clubsrv = new ClubSRV();
            clubsrv.modificarClubArchivos(codigo, nombre, propietario);
            
            bloquearCampos();
            clear_Table(jTable_tabla_Clubes);
            tabla_Clubs_Archivos();
            JOptionPane.showMessageDialog(this, "Club modificado exitosamente.");
            limpiarCampos();
        } catch (ClubDatosVaciosException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (ClubDatosError ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        try {
            String codigo = txtCodigo.getText();
            int posicion = jTable_tabla_Clubes.getSelectedRow();

            ClubSRV clubsrv = new ClubSRV();
            clubsrv.eliminarClub(codigo, posicion);

            bloquearCampos();
            clear_Table(jTable_tabla_Clubes);
            tabla_Clubs_Archivos();

            JOptionPane.showMessageDialog(this, "Club eliminado exitosamente.");

            limpiarCampos();
        } catch (ClubDatosVaciosException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (ClubDatosError ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (ClubExistenteExcepcion ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (ClubNoExisteExcepcion ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jTable_tabla_ClubesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_tabla_ClubesMousePressed
        if (evt.getClickCount() > 1) {
            //clear_Table(jTable1);
            String idClub = (String) jTable_tabla_Clubes.getValueAt(jTable_tabla_Clubes.getSelectedRow(), 0);
            System.out.println("prueba1");
            ClubSRV clubsrv = new ClubSRV();
            System.out.println("prueba2");
            //Club club = clubsrv.obtenerClub_Nombre_Archivos(idClub);
            Club club = clubsrv.obtenerClubRegistro(idClub);
            System.out.println("prueba3");

            txtCodigo.setText(club.getCodigo());
            System.out.println("prueba4");
            txtNombre.setText(club.getNombre());
            System.out.println("prueba5");
            txtPropietario.setText(club.getPropietario());
            System.out.println("prueba6");

            btnCrear.setEnabled(false);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);

            txtCodigo.setEnabled(false);
            txtNombre.setEnabled(true);
            txtPropietario.setEnabled(true);
        }
    }//GEN-LAST:event_jTable_tabla_ClubesMousePressed

    private void txtPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPropietarioActionPerformed

    private void cbxEnOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEnOrdenActionPerformed
        // TODO add your handling code here:
        String ordenarPor = cbxOrdenarPor.getSelectedItem().toString();
        String enOrden = cbxEnOrden.getSelectedItem().toString();

        ClubSRV p = new ClubSRV();
        ArrayList<Club> listaSinDuplicarOrdenada = p.getListaClubesOrdenadaArchivos(ordenarPor, enOrden);

        modeloTabla = (DefaultTableModel) jTable_tabla_Clubes.getModel();
        int tamJtable = modeloTabla.getRowCount();
        for (int j = 0; j < tamJtable; j++) {
            modeloTabla.removeRow(0);
        }
        jTable_tabla_Clubes.setModel(modeloTabla);
        //this.iniciar();
        cargarClubes(listaSinDuplicarOrdenada, enOrden);
    }//GEN-LAST:event_cbxEnOrdenActionPerformed

    private void cbxOrdenarPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOrdenarPorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxOrdenarPorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cbxEnOrden;
    private javax.swing.JComboBox cbxOrdenarPor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_tabla_Clubes;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPropietario;
    // End of variables declaration//GEN-END:variables

    private void clear_Table(JTable jTableVigilante) {
        DefaultTableModel modeloVigia = (DefaultTableModel) jTableVigilante.getModel();
        for (int i = 0; i < jTableVigilante.getRowCount(); i++) {
            modeloVigia.removeRow(i);
            i -= 1;
        }
    }

    private void bloquearCampos() {
        txtCodigo.setEnabled(true);
        txtNombre.setEnabled(true);
        txtPropietario.setEnabled(true);

        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }

    private void tabla_Clubs() {
        DefaultTableModel modeloVigia = (DefaultTableModel) jTable_tabla_Clubes.getModel();
        ClubSRV clubsrv = new ClubSRV();
        List<Club> listaClubes = clubsrv.listaClubes();

        Object[] fila = new Object[modeloVigia.getColumnCount()];
        for (int i = 0; i < listaClubes.size(); i++) {
            fila[0] = listaClubes.get(i).getCodigo();
            fila[1] = listaClubes.get(i).getNombre();
            fila[2] = listaClubes.get(i).getPropietario();
            modeloVigia.addRow(fila);
        }
    }

    private void tabla_Clubs_Archivos() {
        DefaultTableModel modeloVigia = (DefaultTableModel) jTable_tabla_Clubes.getModel();
        ClubSRV clubsrv = new ClubSRV();
        //List<Club> listaClubes = clubsrv.listarParticipantesArchivos();
        ArrayList<Club> listaClubes = clubsrv.listarClubArchivos();
        Object[] fila = new Object[modeloVigia.getColumnCount()];
        for (int i = 0; i < listaClubes.size(); i++) {
            Club club = (Club) listaClubes.get(i);

            fila[0] = club.getCodigo();
            fila[1] = club.getNombre();
            fila[2] = club.getPropietario();
            modeloVigia.addRow(fila);
        }
    }

    private void cargarClubes(ArrayList<Club> listaParticipantes, String enOrden) {
        DefaultTableModel modeloVigia = (DefaultTableModel) jTable_tabla_Clubes.getModel();

        Object[] fila = new Object[modeloVigia.getColumnCount()];
        if (enOrden.equalsIgnoreCase("Ascendente")) {
            for (int i = 0; i < listaParticipantes.size(); i++) {
                Club club = (Club) listaParticipantes.get(i);

                fila[0] = club.getCodigo();
                fila[1] = club.getNombre();
                fila[2] = club.getPropietario();
                modeloVigia.addRow(fila);
            }
        } else if (enOrden.equalsIgnoreCase("Descendente")) {
            for (int i = listaParticipantes.size() - 1; i >= 0; i--) {
                Club club = (Club) listaParticipantes.get(i);

                fila[0] = club.getCodigo();
                fila[1] = club.getNombre();
                fila[2] = club.getPropietario();
                modeloVigia.addRow(fila);
            }
        }
    }
}
